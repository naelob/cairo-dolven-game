Write a function called wizard which takes a matrix and returns 1 if the matrix is a wizard.
A matrix is a wizard if and only if the sum of each single of both its column and rows yields separately the same value.

Example : 

A = [
    2, 7, 6
    9, 5, 1
    4, 3, 8
]
A is a wizard matrix as :

    ROWS
    2 + 7 + 6 = 15
    9 + 5 + 1 = 15
    4 + 3 + 8 = 15

    COLUMNS
    2 + 9 + 4 = 15
    7 + 5 + 3 = 15 
    6 + 1 + 8 = 15
    
Everything yields the same value


We can use two structs :
   struct Row {row_size, row} : row_size : number of rows, and rows an rrays of all the rows
   struct Col {col_size, col} : col_size : number of col, and rows an rrays of all the cols
   
The input matrix will be then in the form of both a Row* and a Col*. The size of the matrix should be squared which means that it will of size n x n with n a natural number.
You must revert if this is not the case.
We assume using only non zero matrix. Hence you should not consider the matrix A = [0, .... 0]

Input : array_len, array_row : Row*, array_col : Col*
Output : res 

A = [
    2, 7, 6
    9, 5, 1
    4, 3, 8
]
Size : 3 x 3
array_row = [{2,7,6}, {9,5,1}, {4,3,8}]
array_col = [{2,9,4}, {7,5,3}, {6,1,8}]

Example : wizard(3, array_row, array_col)
Output :  res = 1 
Indeed, A is a wizard matrix where the sum of each row equals 15, so does the sum of each single column.
  
For B = [
    2, 0, 0, 89
    12, 85, 1, 3
    4, 3, , 43, 8
    0, 0, 0, 67
]
wizard(4, B_rows, B_cols) must not return 1, you can choose to revert with an error message, you are free to return 0 or choose a revert message.
It's obvious that the first row is not equal to the first column ( 2 + 0 + 0 + 89 â‰  2 + 12 + 4 + 0)
As you can see it is not even needed to handle each case, we can already revert at this stage.